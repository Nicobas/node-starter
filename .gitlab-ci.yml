stages:
  - lint
  - build
  - deploy

lint:
  stage: lint
  image: node:16.15-alpine
  cache:
    paths:
      - node_modules/
  before_script:
    - yarn install
  script:
    - yarn run lint

build:
  stage: build
  image: docker/compose
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose -f docker-compose.build.yml pull || true
    - docker-compose -f docker-compose.build.yml build
    - docker-compose -f docker-compose.build.yml push
  only:
    - dev
    - main

deploy_dev:
  stage: deploy
  image: alpine
  variables:
    DOMAIN: dev.starter.nicobas.io
    DOCKER_HOST: ssh://debian@$DOMAIN
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DOMAIN >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "$ENV_DEV" > .env.dev
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker compose -f docker-compose.dev.yml up -d
  only:
    - dev
  environment:
    name: dev
    url: "https://api.$DOMAIN/status"
